// <auto-generated />
using Contact.Entities.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20191011015725_Contact.Entities.Model.ContactContext")]
    partial class ContactEntitiesModelContactContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Contact.Entities.Model.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<int>("ContactId");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Street1")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Street2")
                        .HasColumnType("varchar(256)");

                    b.HasKey("AddressId");

                    b.HasIndex("ContactId");

                    b.ToTable("Address","CNT");
                });

            modelBuilder.Entity("Contact.Entities.Model.ContactInfo", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<bool>("Gender");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("ContactId");

                    b.ToTable("ContactInfo","CNT");
                });

            modelBuilder.Entity("Contact.Entities.Model.Address", b =>
                {
                    b.HasOne("Contact.Entities.Model.ContactInfo", "ContactInfo")
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
